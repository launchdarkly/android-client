apply plugin: 'com.android.library'
apply plugin: 'signing'
apply plugin: 'com.getkeepsafe.dexcount'

allprojects {
    group = 'com.launchdarkly'
    version = '3.0.0'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    configurations.all {
        // https://github.com/easymock/objenesis/issues/79
        resolutionStrategy.force 'org.objenesis:objenesis:2.6'
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xbootclasspath/a:" + System.properties.get("java.home") + "/lib/rt.jar"

        // enable deprecation checks
        options.compilerArgs << "-Xlint:deprecation"
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 30
        versionCode 1
        versionName version
        // at some point between android gradle 3.1.0 and 4.x.x the versionName field in this dsl
        // stopped generating the BuildConfig::VERSION_NAME field in the end java
        // classpath. put this here to bring back that field
        buildConfigField "String", "VERSION_NAME", "\"$version\""
        consumerProguardFiles 'consumer-proguard-rules.pro'

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/**'
        exclude 'META-INF/**'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

ext {
    supportVersion = "28.0.0"
    okhttpVersion = "4.9.0"
    eventsourceVersion = "1.11.2"
    gsonVersion = "2.8.6"
    testRunnerVersion = "1.0.2"
    testVersion = "1.3.0"
}

dependencies {
    api "com.launchdarkly:launchdarkly-java-sdk-common:1.0.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "com.launchdarkly:okhttp-eventsource:$eventsourceVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.jakewharton.timber:timber:4.7.1"
    implementation "com.launchdarkly:launchdarkly-java-sdk-common:1.0.0"
    // Explicitly old version of Google Play Services to allow compatibility without update for
    // older phones
    // TODO: we might not need this for 3.0.0
    //noinspection GradleDependency
    implementation 'com.google.android.gms:play-services-base:17.5.0'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.test:core:$testVersion"
    androidTestImplementation "androidx.test:runner:$testVersion"
    androidTestImplementation "androidx.test:rules:$testVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'org.easymock:easymock:4.2'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'

    androidTestUtil "androidx.test:orchestrator:$testVersion"
}

repositories {
    mavenLocal()
    // Before LaunchDarkly release artifacts get synced to Maven Central they are here along with snapshots:
    maven { url "https://oss.sonatype.org/content/groups/public/" }
    mavenCentral()
    google()
}

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
// https://stackoverflow.com/questions/34571371/android-studio-javadoc-cannot-find-symbol/34572606#34572606
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompileProvider.get().classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

gitPublish {
    repoUri = 'https://github.com/launchdarkly/android-client-sdk.git'
    branch = 'gh-pages'
    contents {
        from(javadoc) {
            into 'api'
        }
    }
}

signing {
    sign configurations.archives
}

nexusStaging {
    packageGroup = "com.launchdarkly"
}

publishing {
    publications {
        release(MavenPublication) {

            groupId = 'com.launchdarkly'
            artifactId = 'final'
            version = '3.0.0'

            pom {
                name = 'LaunchDarkly SDK for Android'
                description = 'Official LaunchDarkly SDK for Android'
                url = 'https://github.com/launchdarkly/android-client-sdk'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'drichelson'
                        name = 'Dan Richelson'
                        email = 'dan@launchdarkly.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/launchdarkly/android-client-sdk.git'
                    developerConnection = 'scm:git:ssh:git@github.com:launchdarkly/android-client-sdk.git'
                    url = 'https://github.com/launchdarkly/android-client-sdk'
                }
            }
        }
    }
}
